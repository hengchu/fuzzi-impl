types
/* The input database */
income:[1.0] { float };
/* The partitions of low, middle, high income groups */
income_groups: [ { float }(3) ];

low_income_sum : float;
mid_income_sum : float;
high_income_sum : float;

/* Auxillary variables for partition extension */
t_income: float;
i: int;
t_part_idx: int;
part_indices: { int };
t_part: { float };
t_idx: int;

/* Constants */
k_LOW_INCOME_THRESHOLD : float;
k_MID_INCOME_THRESHOLD : float;
end

k_LOW_INCOME_THRESHOLD = 1000.0;
k_MID_INCOME_THRESHOLD = 5000.0;

partition(income, income_groups, t_income,
          i, t_part_idx, t_idx,
          part_indices, t_part, 3,
  if t_income < k_LOW_INCOME_THRESHOLD then
    t_part_idx = 0;
  else
    if t_income < k_MID_INCOME_THRESHOLD then
      t_part_idx = 1;
    else
      t_part_idx = 2;
    end
  end
);

i = 0;
t_income = 0.0;
t_part = income_groups[0];
bsum(t_part, low_income_sum, i, t_income, 1000.0);

i = 0;
t_income = 0.0;
t_part = income_groups[1];
bsum(t_part, mid_income_sum, i, t_income, 5000.0);

i = 0;
t_income = 0.0;
t_part = income_groups[2];
bsum(t_part, high_income_sum, i, t_income, 10000.0);
