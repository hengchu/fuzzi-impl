db:[1.0]     { [float](58) };

theta_plus: [float](57);
theta_minus: [float](57);

features_plus: { float };
features_minus: { float };

zero58: [float](58);

w: [float](57);

wout: float;

p_plus: float;
p_minus: float;

m_plus: float;
m_minus: float;

i: int;
j: int;
t: [float](58);

size: float;

lab: float;
tsum: float;
lab_sum: float;
j_plus_sum: float;
j_minus_sum: float;

b_collection: [float](57);

b: float;

all_lab : { float };

size $= lap(1.0, float(length(db)));

bmap(db, all_lab, t, i, lab, { 
  if t[57] == 1.0 then 
    lab = 1.0;
  else 
    lab = 0.0;
  end
});

lab_sum = 0.0;
tsum = 0.0;
bsum(all_lab, lab_sum, tsum, i, 1.0);

p_plus = lab_sum / size;
p_minus = (size - lab_sum) / size;

j = 0;
repeat 57 {
  bmap(db, features_plus, t, i, wout, { 
    if (t[57] == 1.0) then
      wout = t[j] 
    else
      wout = 0.0
    end
  });

  bmap(db, features_minus, t, i, wout, { 
    if t[57] == 0.0 then
      wout = t[j] 
    else
      wout = 0.0
    end
  });

  j_plus_sum = 0.0;
  j_minus_sum = 0.0;
  tsum = 0.0;
  bsum(features_plus, j_plus_sum, tsum, i, 1.0);
  bsum(features_minus, j_minus_sum, tsum, i, 1.0);

  j_plus_sum $= lap(1.0, j_plus_sum);
  j_minus_sum $= lap(1.0, j_minus_sum);

  theta_plus[j] = j_plus_sum / lab_sum;
  theta_minus[j] = j_minus_sum / (size - lab_sum);

  w[j] = log((theta_plus[j])/(theta_minus[j])) - log ((1.0 - (theta_plus[j]))/(1.0 - (theta_minus[j])));

  b_collection[j] = log((1.0 - (theta_plus[j]))/(1.0 - (theta_minus[j]))) - log(p_minus/p_plus);

  j = j+1;

};

b = 0.0;
bsum(b_collection, b, tsum, i, 1.0);

i = 0;
j = 0;
t = zero58;
wout = 0.0;
